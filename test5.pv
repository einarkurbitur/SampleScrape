import json
#with open("songschildren_short.json") as infile:
#    data = json.load(infile)
size(2000,2000)
background(1)

with open("songschildren_short_master.json") as infile:
    data = json.load(infile)
# start position
x = WIDTH / 2
y = HEIGHT - 50
color(mode=RGB, range=255)

transform(CORNER)

def segment(data, mina, maxa, prevWidth, depth):
    # print depth, mina, maxa
    # x2 = x + x_direction
    # y2 = y - height
    # artist = data['artist']
    song = data['song']
    artist = data['artist']
    genre = data['genre']
    year = data['year']

    # stroke(0.5, 1, 0.0)
    # pen (3)
    # line (x, y, x2, y2)
    font(5)
    # text (artist, x2, y2)
    with transform():
        translate(WIDTH /2 , HEIGHT/2)
        # print "r: " + str(mina + (maxa - mina) / 2.0)
        rotate(mina + (maxa - mina) / 2.0)
        gen_width = 200
        distanceFromCenter = gen_width * depth
        if genre.startswith('Hi'):
            fill(255,53,26)
            stroke(255,53,26)
        elif genre.startswith('O'):
            fill(224, 255, 121)
            stroke(224, 255, 121)
        elif genre.startswith('El'):
            fill(90, 136, 204)
            stroke(90, 136, 204)
        elif genre.startswith('Ro'):
            fill(9, 78, 178)
            stroke(9, 78, 178)
        elif genre.startswith('Go'):
            fill(178,95,84)
            stroke(178,95,84)
        elif genre.startswith('Re'):
            fill(255,255,255)
            stroke(255,255,255)
        else:
            fill(255,255,255)
        text (song + " - " + artist, distanceFromCenter, 0)
        text (artist, distanceFromCenter, 5)
        text (year, distanceFromCenter, 10)
        wordWidth = measure(song).width
        #stroke(255,255,255)
        line ((distanceFromCenter - gen_width) + prevWidth, 0, distanceFromCenter, 0)

  
    
    
    if 'children' in data:
        childs = data['children']
        if len(childs) > 0:
            #spacing = height + 100
            #total = (len(childs) -1) * spacing
            #x1 = x2 -(total / 2)
            #new_h_l = height + 50
            #new_h_r = height - 5 
            #left = x_direction - 10 
            #right = x_direction + 20 
            # i = 0.1
            space = (maxa - mina) / (len(childs) * 1.0)
            # print space
            newmin = mina
            
            for c in childs:
                segment(c, newmin, newmin + space, wordWidth, depth + 1)
                # print newmin
                newmin += space
                # spacing = (spacing - 10)
            
            
            
        # return (x2, y2)


segment(data, 0, 360, 200, 0)