size(800, 800)
background(1)
stroke (0)
import math
# start position
cx = WIDTH / 2
cy = HEIGHT / 2
r = 30

# Making it recursive:
# 1. add extra argument 'depth'
# 2. only continue deeper if depth > 0
# 3. call itself (twice)
# 4. decrement the depth of each 'child'
# 5. call the root with a depth > 0

def segment(cx, cy, x_direction, height, depth,degrees):
    a = math.pi * degrees / 180
    x2 = cx + x_direction 
    y2 = cy - height 
    rect (cx + r * math.cos(a)-2, cy + r * math.sin(a)-2, 4, 4)
    #line (x, y, x2, y2)
    line (cx, cy,(x2 + r * math.cos(a)), cy + r * math.sin(a))
    if depth > 0:
        p = 0.4
        stroke(p)
        segment(x2 , y2, x_direction - (40), (10), depth - 1,80)
        segment(x2 , y2, x_direction + (40), (10), depth - 1,-80)

    return (x2, y2)
    


# play with 3rd and 4th argument
segment(400, 400, 0, 100, 1, 0)


